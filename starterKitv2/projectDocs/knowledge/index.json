{
  "module": {
    "name": "knowledge",
    "version": "2.0",
    "description": "Intelligent pattern recognition, relationship mapping, and organizational learning system",
    "parentSystem": "../master-index.json"
  },

  "directoryStructure": {
    "patterns/": {
      "purpose": "Successful, reusable solution patterns",
      "contentTypes": ["design-pattern", "code-pattern", "process-pattern", "decision-pattern"],
      "autoRoute": {
        "patterns": ["pattern", "template", "reusable", "standard", "approach"],
        "confidence": 0.9
      }
    },
    "lessons/": {
      "purpose": "Lessons learned from successes and failures",
      "contentTypes": ["lesson-learned", "retrospective", "postmortem", "success-story"],
      "autoRoute": {
        "patterns": ["lesson", "learned", "retrospective", "postmortem", "what-went"],
        "confidence": 0.95
      }
    },
    "best-practices/": {
      "purpose": "Proven approaches and recommendations",
      "contentTypes": ["best-practice", "guideline", "recommendation", "standard"],
      "autoRoute": {
        "patterns": ["best-practice", "guideline", "recommendation", "should", "standard"],
        "confidence": 0.85
      }
    },
    "anti-patterns/": {
      "purpose": "Things to avoid and common mistakes",
      "contentTypes": ["anti-pattern", "mistake", "pitfall", "avoid"],
      "autoRoute": {
        "patterns": ["anti-pattern", "avoid", "mistake", "pitfall", "dont", "problem"],
        "confidence": 0.9
      }
    },
    "references/": {
      "purpose": "External knowledge, documentation, and resources",
      "contentTypes": ["reference", "documentation", "guide", "tutorial", "research"],
      "autoRoute": {
        "patterns": ["reference", "docs", "guide", "tutorial", "research", "external"],
        "confidence": 0.8
      }
    },
    "graph/": {
      "purpose": "Relationship mappings and knowledge connections",
      "contentTypes": ["relationship-map", "connection-graph", "dependency-map"],
      "managed": true,
      "autoGenerated": true
    }
  },

  "contentAnalysisPatterns": {
    "filenameKeywords": [
      "pattern", "lesson", "best-practice", "anti-pattern", "reference",
      "guide", "how-to", "approach", "methodology", "framework"
    ],
    "contentKeywords": [
      "pattern", "approach", "methodology", "lesson learned", "best practice",
      "avoid", "recommend", "proven", "successful", "failed", "mistake"
    ],
    "knowledgeTypes": {
      "pattern": ["reusable", "template", "standard", "approach", "methodology"],
      "lesson": ["learned", "experience", "retrospective", "what worked", "what failed"],
      "practice": ["best practice", "recommendation", "proven", "guideline"],
      "antipattern": ["avoid", "mistake", "pitfall", "problem", "failure"]
    }
  },

  "relationshipMappings": {
    "knowledgeGraph": {
      "nodeTypes": {
        "requirements": "requirement documents and specifications",
        "tasks": "implementation tasks and work items", 
        "decisions": "architectural and business decisions",
        "patterns": "reusable solution patterns",
        "lessons": "lessons learned and retrospectives",
        "practices": "best practices and guidelines",
        "antipatterns": "things to avoid and mistakes",
        "references": "external knowledge and documentation"
      },
      "relationshipTypes": {
        "applies_to": {
          "confidence": 0.8,
          "description": "pattern/practice applies to specific context",
          "autoDetect": "semantic similarity and contextual relevance"
        },
        "prevents": {
          "confidence": 0.9,
          "description": "lesson/antipattern prevents specific mistake",
          "autoDetect": "explicitly mentions prevention or avoidance"
        },
        "builds_on": {
          "confidence": 0.85,
          "description": "knowledge builds on other knowledge",
          "autoDetect": "references to other patterns or practices"
        },
        "conflicts_with": {
          "confidence": 0.8,
          "description": "contradictory approaches or recommendations",
          "autoDetect": "contradictory statements or approaches"
        },
        "generalizes": {
          "confidence": 0.75,
          "description": "general pattern for specific cases",
          "autoDetect": "abstraction level and scope analysis"
        },
        "specializes": {
          "confidence": 0.75,
          "description": "specific case of general pattern",
          "autoDetect": "specialization indicators"
        }
      }
    },
    "crossModuleConnections": {
      "to_requirements": {
        "guided_by": "requirements informed by patterns/practices",
        "validated_by": "lessons validate requirement approaches"
      },
      "to_tasks": {
        "informs": "patterns inform task implementation",
        "learned_from": "lessons learned from task outcomes"
      },
      "to_decisions": {
        "influences": "knowledge influences decision alternatives",
        "captured_from": "decisions generate knowledge patterns"
      },
      "to_execution": {
        "guides": "patterns guide implementation approaches",
        "extracted_from": "knowledge extracted from execution"
      }
    }
  },

  "patternRecognition": {
    "automaticDetection": {
      "successPatterns": {
        "triggers": ["successful_completion", "positive_outcomes", "stakeholder_satisfaction"],
        "analysis": ["approach_used", "conditions", "factors", "outcomes"],
        "threshold": 0.8,
        "action": "promote_to_pattern"
      },
      "failurePatterns": {
        "triggers": ["failed_implementation", "negative_outcomes", "rework_required"],
        "analysis": ["root_cause", "contributing_factors", "impact", "prevention"],
        "threshold": 0.7,
        "action": "create_antipattern"
      },
      "repetitionIdentification": {
        "semanticSimilarity": 0.8,
        "contextualRelevance": 0.7,
        "outcomeSimilarity": 0.9,
        "action": "suggest_pattern_creation"
      }
    },
    "patternEvolution": {
      "refinement": {
        "moreEvidence": "strengthen pattern with additional examples",
        "counterExamples": "refine pattern scope and applicability",
        "contextExpansion": "expand pattern to new contexts"
      },
      "generalization": {
        "crossProject": "identify patterns across multiple projects",
        "crossDomain": "find domain-independent patterns",
        "abstraction": "create higher-level pattern categories"
      }
    }
  },

  "learningSystem": {
    "experienceCapture": {
      "automaticCapture": {
        "taskCompletion": "extract lessons from completed tasks",
        "decisionOutcomes": "learn from decision results",
        "projectRetrospectives": "capture project-level learnings",
        "mistakeAnalysis": "analyze and prevent mistake repetition"
      },
      "structuredLearning": {
        "successFactors": "identify what made things work",
        "failureFactors": "understand what caused problems",
        "contextFactors": "when does approach work/not work",
        "improvementOpportunities": "how to do better next time"
      }
    },
    "knowledgeApplication": {
      "contextMatching": {
        "similarity": 0.8,
        "relevance": 0.7,
        "applicability": 0.9
      },
      "recommendationEngine": {
        "suggestPatterns": "recommend relevant patterns for new work",
        "warnAntipatterns": "alert to potential mistakes",
        "proposePractices": "suggest best practices for context",
        "shareReferences": "provide relevant external resources"
      }
    },
    "continuousImprovement": {
      "feedbackLoop": {
        "trackRecommendations": "monitor if recommendations are followed",
        "measureOutcomes": "assess results of applied knowledge",
        "refineRecommendations": "improve recommendation accuracy",
        "updateKnowledge": "evolve knowledge base based on results"
      }
    }
  },

  "qualityGates": {
    "patternValidation": {
      "minimumEvidence": "patterns require at least 2 successful applications",
      "contextClarity": "clear description of when pattern applies",
      "outcomeDocumentation": "documented benefits and results",
      "applicabilityScope": "defined scope and limitations"
    },
    "lessonQuality": {
      "rootCauseAnalysis": "lessons must identify root causes",
      "actionableInsights": "clear takeaways and recommendations",
      "preventionStrategies": "how to prevent similar issues",
      "generalizeability": "lessons applicable beyond specific case"
    },
    "practiceValidation": {
      "evidenceBased": "practices backed by evidence and examples",
      "contextSpecific": "clear context where practice applies",
      "measurableOutcomes": "quantifiable benefits documented",
      "adoptionGuidance": "clear guidance on how to adopt"
    }
  },

  "automationRules": {
    "knowledgeCapture": {
      "postTaskCompletion": {
        "trigger": "task_moved_to_completed",
        "action": "analyze_for_patterns_and_lessons",
        "template": "task-retrospective-template.md"
      },
      "postDecisionImplementation": {
        "trigger": "decision_outcome_evaluated", 
        "action": "extract_decision_patterns",
        "template": "decision-pattern-template.md"
      },
      "projectCompletion": {
        "trigger": "project_completed",
        "action": "comprehensive_knowledge_extraction",
        "template": "project-retrospective-template.md"
      }
    },
    "relationshipBuilding": {
      "semanticLinking": {
        "algorithm": "semantic_similarity_analysis",
        "threshold": 0.8,
        "action": "create_relationship_suggestions"
      },
      "referenceTracking": {
        "directReferences": "track explicit references to knowledge",
        "contextualReferences": "identify implicit knowledge application",
        "outcomeCorrelation": "correlate knowledge use with outcomes"
      }
    },
    "knowledgeApplication": {
      "contextualRecommendations": {
        "trigger": "new_requirement_or_task_created",
        "action": "suggest_relevant_patterns_and_practices",
        "confidence": 0.7
      },
      "mistakePrevention": {
        "trigger": "pattern_similar_to_known_failure",
        "action": "warn_about_potential_antipattern",
        "confidence": 0.8
      }
    }
  },

  "metricsTracking": {
    "knowledgeGrowth": {
      "patternsIdentified": "number of new patterns captured",
      "lessonsLearned": "lessons documented per project",
      "practicesAdopted": "best practices successfully adopted",
      "antipatternsAvoided": "mistakes prevented through knowledge"
    },
    "knowledgeUtilization": {
      "patternReuse": "frequency of pattern application",
      "recommendationFollowthrough": "percentage of recommendations followed",
      "knowledgeSearchActivity": "how often knowledge is accessed",
      "contextualRelevance": "accuracy of knowledge recommendations"
    },
    "learningEffectiveness": {
      "mistakeReduction": "reduction in repeated mistakes",
      "improvementVelocity": "speed of process improvement",
      "knowledgeTransfer": "successful knowledge sharing",
      "outcomeCorrelation": "correlation between knowledge use and success"
    }
  }
} 