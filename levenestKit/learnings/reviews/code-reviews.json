{
  "codeReviewLearning": {
    "version": "1.0.0",
    "description": "Code review patterns and learning mechanisms",
    "lastReviewUpdate": 1,
    "totalReviews": 0,
    "learningSequence": 1
  },

  "reviewPatterns": {
    "successful-reviews": {
      "high-confidence-patterns": [
        "Clear variable naming with descriptive intent",
        "Consistent code formatting and style adherence",
        "Comprehensive error handling and edge cases",
        "Proper separation of concerns and modularity",
        "Adequate code comments explaining complex logic"
      ],
      "quality-indicators": {
        "code-readability": "Clear, self-documenting code structure",
        "maintainability": "Easy to modify and extend",
        "performance": "Efficient algorithms and resource usage",
        "security": "No obvious security vulnerabilities",
        "testing": "Good test coverage and quality"
      }
    },

    "common-issues": {
      "naming-conventions": {
        "frequency": "high",
        "impact": "medium",
        "patterns": ["unclear variable names", "inconsistent naming", "abbreviated names"],
        "solutions": ["use descriptive names", "follow team conventions", "avoid abbreviations"]
      },
      "error-handling": {
        "frequency": "medium",
        "impact": "high",
        "patterns": ["missing try-catch blocks", "generic error messages", "unhandled edge cases"],
        "solutions": ["add comprehensive error handling", "specific error messages", "handle edge cases"]
      },
      "performance-issues": {
        "frequency": "medium",
        "impact": "high",
        "patterns": ["inefficient loops", "unnecessary API calls", "memory leaks"],
        "solutions": ["optimize algorithms", "cache API responses", "proper cleanup"]
      }
    }
  },

  "reviewerPerformance": {
    "critical-reviewer": {
      "accuracyRate": 0.96,
      "averageConfidenceScore": 0.95,
      "reviewsCompleted": 0,
      "strengthAreas": ["security-analysis", "performance-assessment", "code-quality"],
      "improvementAreas": ["framework-specific-patterns", "emerging-technologies"],
      "consistencyScore": 0.94
    }
  },

  "learningMechanisms": {
    "pattern-recognition": {
      "successful-review-traits": "Track characteristics of high-quality reviews",
      "failure-analysis": "Analyze reviews that missed critical issues",
      "confidence-calibration": "Improve correlation between confidence and accuracy",
      "domain-specialization": "Learn domain-specific review patterns"
    },
    "feedback-integration": {
      "post-deployment-feedback": "Learn from production issues after code reviews",
      "developer-feedback": "Incorporate human developer feedback on review quality",
      "automated-testing-correlation": "Learn from test results post-review",
      "performance-monitoring": "Learn from production performance data"
    }
  },

  "improvementActions": {
    "confidence-threshold-adjustments": {
      "current-threshold": 0.95,
      "adjustment-triggers": ["accuracy-below-90%", "missed-critical-issues", "false-positives"],
      "adjustment-magnitude": "5% increments based on performance data"
    },
    "review-checklist-updates": {
      "add-new-patterns": "Include newly discovered issue patterns",
      "remove-outdated-patterns": "Remove patterns no longer relevant",
      "prioritize-checks": "Order checks by impact and frequency"
    },
    "specialization-development": {
      "framework-expertise": "Develop deeper knowledge in specific frameworks",
      "security-patterns": "Enhance security vulnerability detection",
      "performance-optimization": "Improve performance issue identification"
    }
  }
}
