{
  "module": {
    "name": "automation",
    "version": "2.0",
    "description": "Workflow automation, rule engines, and intelligent system integration",
    "parentSystem": "../master-index.json"
  },

  "directoryStructure": {
    "workflows/": {
      "purpose": "Automated workflow definitions and state machines",
      "contentTypes": ["workflow-definition", "state-machine", "process-automation", "trigger-chain"],
      "autoGenerated": true,
      "configurable": true
    },
    "rules/": {
      "purpose": "Business rules, validation logic, and decision automation",
      "contentTypes": ["business-rule", "validation-rule", "decision-rule", "routing-rule"],
      "autoGenerated": true,
      "userCustomizable": true
    },
    "triggers/": {
      "purpose": "Event triggers, scheduling, and automation initiation logic",
      "contentTypes": ["event-trigger", "schedule-trigger", "webhook", "integration-point"],
      "autoGenerated": true,
      "realTimeMonitoring": true
    }
  },

  "workflowAutomation": {
    "coreWorkflows": {
      "requirementLifecycle": {
        "stages": ["initial", "refined", "approved", "implemented", "tested", "delivered"],
        "automaticTransitions": {
          "initial_to_refined": {
            "trigger": "stakeholder_validated AND acceptance_criteria_defined",
            "actions": ["update_status", "notify_implementation_team", "create_implementation_tasks"]
          },
          "refined_to_approved": {
            "trigger": "quality_gates_passed AND stakeholder_approval",
            "actions": ["lock_requirements", "notify_project_manager", "update_project_plan"]
          },
          "approved_to_implemented": {
            "trigger": "implementation_tasks_completed",
            "actions": ["create_test_plan", "schedule_validation", "update_traceability"]
          }
        },
        "escalationRules": {
          "stagnation_alert": "if_no_progress_for_iteration_5",
          "quality_concern": "if_validation_fails_twice",
          "stakeholder_unresponsive": "if_no_approval_for_iteration_7"
        }
      },

      "taskProgression": {
        "stages": ["pending", "active", "testing", "completed", "archived"],
        "automaticTransitions": {
          "pending_to_active": {
            "trigger": "assignee_confirmed AND dependencies_resolved",
            "actions": ["start_time_tracking", "notify_assignee", "update_capacity_planning"]
          },
          "active_to_testing": {
            "trigger": "implementation_completed AND self_test_passed",
            "actions": ["assign_reviewer", "create_test_checklist", "notify_qa_team"]
          },
          "testing_to_completed": {
            "trigger": "tests_passed AND review_approved",
            "actions": ["update_metrics", "create_retrospective", "notify_stakeholders"]
          }
        },
        "blockageDetection": {
          "iterationBasedBlocks": "task_in_same_status_for_iteration_3",
          "dependencyBlocks": "dependency_task_failed_or_delayed",
          "resourceBlocks": "assignee_unavailable_for_iteration_2"
        }
      },

      "decisionJourney": {
        "stages": ["problem", "alternatives", "evaluation", "decision", "implementation", "monitoring"],
        "mandatoryValidation": {
          "problem_to_alternatives": {
            "required": ["clear_problem_statement", "success_criteria", "constraints"],
            "blocking": true
          },
          "alternatives_to_evaluation": {
            "required": ["minimum_2_alternatives", "resource_estimates", "feasibility_assessment"],
            "blocking": true
          },
          "evaluation_to_decision": {
            "required": ["evaluation_criteria", "comparison_matrix", "stakeholder_input"],
            "blocking": true
          },
          "decision_to_implementation": {
            "required": ["chosen_option", "rationale", "implementation_plan"],
            "blocking": true
          }
        },
        "outcomeTracking": {
          "review_schedules": ["iteration_10", "iteration_30", "iteration_90"],
          "success_measurement": "compare_outcomes_to_predicted_success_criteria",
          "learning_capture": "extract_patterns_for_future_decisions"
        }
      }
    },

    "crossModuleWorkflows": {
      "requirement_to_delivery": {
        "description": "End-to-end workflow from requirement to delivered value",
        "stages": [
          "requirement_refined",
          "tasks_created", 
          "implementation_completed",
          "testing_validated",
          "stakeholder_accepted",
          "value_delivered"
        ],
        "automation": {
          "task_creation": "auto_create_implementation_tasks_from_requirements",
          "test_generation": "auto_create_tests_from_acceptance_criteria",
          "documentation": "auto_generate_documentation_from_implementations",
          "metrics_tracking": "auto_track_value_delivery_metrics"
        }
      },

      "knowledge_feedback_loop": {
        "description": "Continuous learning and knowledge application workflow",
        "stages": [
          "work_completion",
          "pattern_analysis",
          "knowledge_extraction",
          "pattern_validation",
          "knowledge_application"
        ],
        "automation": {
          "pattern_detection": "analyze_completed_work_for_patterns",
          "knowledge_creation": "auto_create_patterns_and_lessons",
          "recommendation_engine": "suggest_relevant_knowledge_for_new_work",
          "feedback_collection": "track_knowledge_application_outcomes"
        }
      }
    }
  },

  "ruleEngine": {
    "qualityGateRules": {
      "requirement_validation": {
        "stakeholder_specificity": {
          "rule": "stakeholder NOT IN ['users', 'people', 'customers', 'everyone']",
          "severity": "error",
          "message": "Stakeholder must be specific, not generic"
        },
        "acceptance_criteria_measurability": {
          "rule": "acceptance_criteria CONTAINS PATTERN ['<[0-9]+', '>=[0-9]+', 'within [0-9]+ seconds']",
          "severity": "warning",
          "message": "Acceptance criteria should include measurable thresholds"
        },
        "business_value_clarity": {
          "rule": "business_value CONTAINS PATTERN ['roi', 'cost savings', 'revenue', 'efficiency']",
          "severity": "warning", 
          "message": "Business value should be quantifiable"
        }
      },

      "task_progression": {
        "ready_for_active": {
          "rule": "has_assignee AND dependencies_resolved AND acceptance_criteria_clear",
          "blocking": true,
          "message": "Task must have assignee, resolved dependencies, and clear criteria"
        },
        "ready_for_testing": {
          "rule": "implementation_documented AND self_test_completed",
          "blocking": true,
          "message": "Implementation must be documented and self-tested"
        },
        "ready_for_completion": {
          "rule": "tests_passed AND documentation_updated AND retrospective_created",
          "blocking": true,
          "message": "All quality gates must pass before completion"
        }
      },

      "decision_completeness": {
        "journey_validation": {
          "rule": "ALL_PHASES_COMPLETE(['problem', 'alternatives', 'evaluation', 'decision', 'implementation', 'monitoring'])",
          "blocking": true,
          "message": "All decision journey phases must be complete"
        },
        "alternative_requirement": {
          "rule": "alternatives.length >= 2",
          "blocking": true,
          "message": "Minimum 2 alternatives must be considered"
        },
        "success_metrics": {
          "rule": "success_metrics.defined AND success_metrics.measurable",
          "blocking": true,
          "message": "Measurable success metrics must be defined"
        }
      }
    },

    "routingRules": {
      "content_analysis": {
        "algorithm": "weighted_pattern_matching",
        "weights": {
          "filename_patterns": 0.4,
          "content_keywords": 0.4,
          "yaml_frontmatter": 0.2
        },
        "confidence_thresholds": {
          "auto_route": 0.9,
          "suggest_route": 0.7,
          "manual_review": 0.5
        }
      },

      "dynamic_routing": {
        "learning_enabled": true,
        "pattern_adaptation": "adjust_routing_patterns_based_on_user_corrections",
        "confidence_tuning": "optimize_thresholds_based_on_accuracy_metrics"
      }
    },

    "alertingRules": {
      "project_health": {
        "critical_health": {
          "condition": "project_health_score < 0.4",
          "severity": "critical",
          "notification": ["project_manager", "stakeholders"],
          "escalation": "immediate"
        },
        "velocity_decline": {
          "condition": "task_velocity DECLINING_FOR 3_weeks",
          "severity": "warning", 
          "notification": ["team_lead"],
          "escalation": "if_not_addressed_in_1_week"
        }
      },

      "blockage_management": {
        "task_blocked": {
          "condition": "task_in_blocked_status > 3_days",
          "severity": "warning",
          "notification": ["assignee", "manager"],
          "auto_action": "create_blocker_resolution_task"
        },
        "cascading_blocks": {
          "condition": "dependent_tasks_blocked > 5",
          "severity": "critical",
          "notification": ["project_manager"],
          "auto_action": "schedule_blocker_resolution_session"
        }
      }
    }
  },

  "integrationAutomation": {
    "fileWatching": {
      "watchedDirectories": [
        "requirements/**/*.md",
        "tasks/**/*.md", 
        "decisions/**/*.md",
        "knowledge/**/*.md",
        "execution/**/*"
      ],
      "events": {
        "file_created": {
          "actions": ["content_analysis", "routing_suggestion", "relationship_detection"]
        },
        "file_modified": {
          "actions": ["relationship_update", "impact_analysis", "quality_validation"]
        },
        "file_moved": {
          "actions": ["update_references", "maintain_relationships", "validate_new_location"]
        }
      }
    },

    "webhookIntegration": {
      "externalSystemEvents": {
        "version_control": {
          "commit_hook": "link_commits_to_tasks_and_requirements",
          "pr_hook": "trigger_review_workflows",
          "merge_hook": "update_implementation_status"
        },
        "issue_tracking": {
          "issue_created": "create_corresponding_task_or_requirement",
          "issue_updated": "sync_status_and_priority",
          "issue_closed": "mark_related_work_completed"
        },
        "ci_cd": {
          "build_success": "update_implementation_metrics",
          "deployment_complete": "trigger_validation_workflows",
          "test_results": "update_quality_metrics"
        }
      }
    },

    "scheduledAutomation": {
      "daily_tasks": {
        "health_calculation": "calculate_and_update_project_health_metrics",
        "dependency_check": "check_and_resolve_task_dependencies",
        "alert_processing": "process_and_send_daily_alerts"
      },
      "weekly_tasks": {
        "trend_analysis": "analyze_velocity_and_quality_trends",
        "pattern_recognition": "identify_new_patterns_in_completed_work",
        "report_generation": "generate_weekly_progress_reports"
      },
      "monthly_tasks": {
        "process_optimization": "analyze_workflow_efficiency_and_suggest_improvements",
        "knowledge_consolidation": "consolidate_and_refine_knowledge_base",
        "system_tuning": "optimize_automation_rules_based_on_performance"
      }
    }
  },

  "aiAgentAutomation": {
    "intelligentAssistance": {
      "contextualGuidance": {
        "new_requirement": "suggest_relevant_patterns_and_validate_against_quality_gates",
        "task_creation": "recommend_implementation_approach_and_estimate_effort", 
        "decision_needed": "provide_decision_template_and_suggest_alternatives",
        "implementation_complete": "guide_through_quality_checks_and_documentation"
      },

      "proactiveRecommendations": {
        "risk_mitigation": "identify_potential_risks_and_suggest_preventive_actions",
        "optimization_opportunities": "recommend_process_improvements_based_on_data",
        "knowledge_application": "suggest_relevant_knowledge_for_current_context",
        "resource_allocation": "recommend_optimal_task_assignments_based_on_capacity"
      }
    },

    "adaptiveLearning": {
      "pattern_evolution": {
        "success_amplification": "identify_and_promote_successful_patterns",
        "failure_prevention": "capture_and_prevent_failure_patterns",
        "process_refinement": "continuously_improve_automation_rules"
      },

      "personalization": {
        "team_preferences": "adapt_workflows_to_team_working_styles",
        "project_characteristics": "customize_automation_based_on_project_type",
        "stakeholder_needs": "tailor_reporting_and_communication_to_stakeholder_preferences"
      }
    }
  },

  "metricsAndMonitoring": {
    "automationEffectiveness": {
      "automation_adoption": "percentage_of_work_flowing_through_automated_processes",
      "manual_intervention_rate": "frequency_of_manual_overrides_to_automation",
      "automation_accuracy": "percentage_of_correct_automated_decisions",
      "time_savings": "time_saved_through_automation_vs_manual_processes"
    },

    "systemPerformance": {
      "processing_latency": "time_from_trigger_to_action_completion",
      "reliability_rate": "percentage_of_successful_automation_executions",
      "error_rate": "frequency_and_types_of_automation_failures",
      "scalability_metrics": "performance_under_increasing_load"
    },

    "businessValue": {
      "quality_improvement": "improvement_in_deliverable_quality_through_automation",
      "delivery_acceleration": "reduction_in_time_to_value_delivery",
      "resource_optimization": "better_resource_utilization_through_intelligent_assignment",
      "stakeholder_satisfaction": "satisfaction_with_automated_processes_and_outcomes"
    }
  }
} 